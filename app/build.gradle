plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.mybooks"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }



    buildTypes {
        def STRING = "String"
        def INT = "int"

        all {
//            buildConfigField STRING, "GOOGLE_API_KEY", '"AIzaSyDztvy-kOw1lPY0nNOSPps7LGEkM5D-c_0"'
            buildConfigField STRING, "GOOGLE_API_BOOKS_URL_BASE", '"https://www.googleapis.com/"'
            buildConfigField STRING, "GOOGLE_API_KEY", '"AIzaSyBCddtAuSvzE-1RK0e4HehjjXtayQ4LfM4"'
            buildConfigField STRING, "NOTIFICATION_CHANNEL_ALARMS_ID", '"NOTIFICATION_CHANNEL_ALARMS_ID"'
            buildConfigField STRING, "NOTIFICATION_CHANNEL_ALARMS_NAME", '"Books Alarms"'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        mock {
            initWith debug
            applicationIdSuffix = ".mock"
        }


    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
//    kotlinOptions {
//        jvmTarget = '1.8'
//    }
}
ext {
    support_library_version = '28.1.1'
    constraint_layout_version = '1.1.0'
    espresso_version = '3.0.1'
    retrofit_version = '2.4.0'
    okhttp_version = '3.9.1'
    kotlin_coroutines_version = '1.0.0'
    mockito_version = '2.18.3'

    anko_version = '0.10.4'
    buildToolsVersion = "27.0.3"
    playServicesLocationVersion = "16.0.0"
    playServicesAuthVersion = "15.0.1"
    playServicesVisionVersion = "15.0.2"

    firebaseAuthVersion = "16.0.2"
    firebaseCoreVersion = "16.0.1"
    firebaseMessagingVersion = "17.1.0"
    firebaseFireStoreVersion = "17.0.3"
    firebaseDatabaseVersion = "16.0.1"

    retrofitVersion = "2.3.0"
    butterknifeVersion = "10.1.0"
    daggerVersion = "2.18"
    picassoVersion = "2.71828"
    glideVersion = "4.9.0"
    roomVersion = '2.0.0-beta01'
    gsonVersion = "2.8.5"
    leakCanaryVersion = "1.6.3"

    GsonVersion = "2.8.4"
    work_manager_version = '1.0.0'
    androidPlotVersion = "1.5.6"
    roomVersion = "2.2.5"
    lifecycleVersion = "2.2.0"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.multidex:multidex:2.0.0'
    androidTestImplementation('androidx.multidex:multidex-instrumentation:2.0.0') {
        exclude group: 'com.android.support', module: 'multidex'
    }

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.0-beta01'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0-beta01'
    implementation 'com.google.android.material:material:1.0.0-beta01'

    // LOCATION
    implementation "com.google.android.gms:play-services-location:$playServicesLocationVersion"

    // TEST
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test:rules:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
    implementation "org.mockito:mockito-core:$mockito_version"
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0'
    testImplementation 'androidx.arch.core:core-testing:2.0.0-beta01'

    // ARCHITECTURE COMPONENTS
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0-beta01'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.0.0-beta01'
    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"

    // DAGGER
    implementation "com.google.dagger:dagger:$daggerVersion"
    androidTestImplementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-android-processor:$daggerVersion"

    // BUTTERKNIFE
    implementation "com.jakewharton:butterknife:$butterknifeVersion"
    kapt "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    // COROUTINES
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    // RETROFIT
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // GSON
    implementation "com.google.code.gson:gson:$gsonVersion"

    // ROOM PERSISTENCE
    implementation "androidx.room:room-runtime:$roomVersion"
    annotationProcessor "androidx.room:room-compiler:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    // PICASSO
    implementation "com.squareup.picasso:picasso:$picassoVersion"
    implementation 'jp.wasabeef:picasso-transformations:2.2.1'
    //implementation "com.github.bumptech.glide:glide:$glideVersion"

    // ANDROID PLOT
    implementation "com.androidplot:androidplot-core:$androidPlotVersion"

    // LEAK CANARY
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    mockImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"

    // WORK MANAGER
    implementation "android.arch.work:work-runtime-ktx:$work_manager_version"

    // Room components
    implementation "androidx.room:room-ktx:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'


}

kapt {
    generateStubs = true
}